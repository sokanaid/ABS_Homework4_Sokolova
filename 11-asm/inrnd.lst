     1                                  ; file.asm - использование файлов в NASM
     2                                  extern printf
     3                                  extern rand
     4                                  
     5                                  
     6                                  extern TRAIN
     7                                  extern SHIP
     8                                  extern PLANE
     9                                  
    10                                  
    11                                  ;----------------------------------------------
    12                                  ; // rnd.c - содержит генератор случайных чисел в диапазоне от 1 до 20
    13                                  ; int Random() {
    14                                  ;     return rand() % 20 + 1;
    15                                  ; }
    16                                  global Random
    17                                  Random:
    18                                  section .data
    19 00000000 1400000000000000            .i20     dq      20
    20 00000008 52616E646F6D206E75-         .rndNumFmt       db "Random number = %d",10,0
    20 00000011 6D626572203D202564-
    20 0000001A 0A00               
    21                                  section .text
    22 00000000 55                      push rbp
    23 00000001 4889E5                  mov rbp, rsp
    24                                  
    25 00000004 4831C0                      xor     rax, rax    ;
    26 00000007 E8(00000000)                call    rand        ; запуск генератора случайных чисел
    27 0000000C 4831D2                      xor     rdx, rdx    ; обнуление перед делением
    28 0000000F 48F73C25[00000000]          idiv    qword[.i20]       ; (/%) -> остаток в rdx
    29 00000017 4889D0                      mov     rax, rdx
    30 0000001A 48FFC0                      inc     rax         ; должно сформироваться случайное число
    31                                  
    32                                      ;mov     rdi, .rndNumFmt
    33                                      ;mov     esi, eax
    34                                      ;xor     rax, rax
    35                                      ;call    printf
    36                                  
    37                                  
    38 0000001D C9                      leave
    39 0000001E C3                      ret
    40                                  
    41                                  ;inline auto RandomDistance() {
    42                                  ;    return rand() % 10000 + 1 + (double) rand() / RAND_MAX;
    43                                  ;}
    44                                  global RandomDistance
    45                                  RandomDistance:
    46                                  section .data
    47 0000001C 1027000000000000            .i20     dq      10000
    48 00000024 52616E646F6D206E75-         .rndNumFmt       db "Random number = %lg",10,0
    48 0000002D 6D626572203D20256C-
    48 00000036 670A00             
    49                                  section .bss
    50 00000000 <res 00000008>              .prect  resq 1   ;случайно числа
    51                                  section .text
    52 0000001F 55                      push rbp
    53 00000020 4889E5                  mov rbp, rsp
    54                                  
    55 00000023 4831C0                      xor     rax, rax    
    56 00000026 E8(00000000)                call    rand
    57 0000002B 4831D2                      xor     rdx, rdx    ; обнуление перед делением
    58 0000002E 48F73C25[1C000000]          idiv    qword[.i20]   
    59 00000036 4889D0                      mov     rax, rdx
    60 00000039 F2480F2AC0                  cvtsi2sd    xmm0 , rax
    61 0000003E 488B0425[1C000000]          mov rax, [.i20]
    62 00000046 F2480F2AC8                  cvtsi2sd    xmm1 , rax
    63 0000004B F20F5EC1                    divsd    xmm0 , xmm1 ; дробная часть в xmm0
    64 0000004F F20F10D0                    movsd xmm2 , xmm0
    65                                       ;Вывод дробной части
    66                                       ;mov     rdi, .rndNumFmt
    67                                  ;     movsd  xmm0 , xmm2
    68                                  ;    mov     rax, 1
    69                                  ;    call    printf
    70                                  
    71 00000053 4831C0                      xor     rax, rax    ;
    72 00000056 E8(00000000)                call    rand        ; запуск генератора случайных чисел
    73 0000005B 4831D2                      xor     rdx, rdx    ; обнуление перед делением
    74 0000005E 48F73C25[1C000000]          idiv    qword[.i20]       ; (/%) -> остаток в rdx
    75 00000066 4889D0                      mov     rax, rdx
    76 00000069 48FFC0                      inc     rax         ; должно сформироваться случайное число
    77 0000006C F2480F2AC8                  cvtsi2sd    xmm1, rax
    78 00000071 F20F58D1                    addsd   xmm2 , xmm1
    79 00000075 F20F10C2                    movsd xmm0 , xmm2
    80                                      
    81                                  
    82                                      ;mov     rdi, .rndNumFmt
    83                                  ;    mov     [rsi], xmm0
    84                                  ;    mov     rax, 1
    85                                  ;    call    printf
    86                                  
    87                                  
    88 00000079 C9                      leave
    89 0000007A C3                      ret
    90                                  
    91                                  ;inline auto RandomShipType() {
    92                                  ;    return rand() % 3 + 1;
    93                                  ;}
    94                                  global RandomShipType
    95                                  RandomShipType:
    96                                  section .data
    97 00000039 0300000000000000            .i20     dq      3
    98 00000041 52616E646F6D206E75-         .rndNumFmt       db "Random number = %d",10,0
    98 0000004A 6D626572203D202564-
    98 00000053 0A00               
    99                                  section .text
   100 0000007B 55                      push rbp
   101 0000007C 4889E5                  mov rbp, rsp
   102                                  
   103 0000007F 4831C0                      xor     rax, rax    ;
   104 00000082 E8(00000000)                call    rand        ; запуск генератора случайных чисел
   105 00000087 4831D2                      xor     rdx, rdx    ; обнуление перед делением
   106 0000008A 48F73C25[39000000]          idiv    qword[.i20]       ; (/%) -> остаток в rdx
   107 00000092 4889D0                      mov     rax, rdx
   108 00000095 48FFC0                      inc     rax         ; должно сформироваться случайное число
   109                                  
   110                                      ;mov     rdi, .rndNumFmt
   111                                      ;mov     esi, eax
   112                                      ;xor     rax, rax
   113                                      ;call    printf
   114                                  
   115                                  
   116 00000098 C9                      leave
   117 00000099 C3                      ret
   118                                  
   119                                  ;inline auto RandomSpeed() {
   120                                  ;    return rand() % 500 + 1;
   121                                  ;}
   122                                  global RandomSpeed
   123                                  RandomSpeed:
   124                                  section .data
   125 00000055 F401000000000000            .i20     dq      500
   126 0000005D 52616E646F6D206E75-         .rndNumFmt       db "Random number = %d",10,0
   126 00000066 6D626572203D202564-
   126 0000006F 0A00               
   127                                  section .text
   128 0000009A 55                      push rbp
   129 0000009B 4889E5                  mov rbp, rsp
   130                                  
   131 0000009E 4831C0                      xor     rax, rax    ;
   132 000000A1 E8(00000000)                call    rand        ; запуск генератора случайных чисел
   133 000000A6 4831D2                      xor     rdx, rdx    ; обнуление перед делением
   134 000000A9 48F73C25[55000000]          idiv    qword[.i20]       ; (/%) -> остаток в rdx
   135 000000B1 4889D0                      mov     rax, rdx
   136 000000B4 48FFC0                      inc     rax         ; должно сформироваться случайное число
   137                                  
   138                                      ;mov     rdi, .rndNumFmt
   139                                      ;mov     esi, eax
   140                                      ;xor     rax, rax
   141                                      ;call    printf
   142                                  
   143                                  
   144 000000B7 C9                      leave
   145 000000B8 C3                      ret
   146                                  
   147                                  ;inline auto RandomDisplacement() {
   148                                  ;    return rand() % 50000 + 10;
   149                                  ;}
   150                                  
   151                                  global RandomDisplacement
   152                                  RandomDisplacement:
   153                                  section .data
   154 00000071 50C3000000000000            .i20     dq      50000
   155 00000079 52616E646F6D206E75-         .rndNumFmt       db "Random number = %d",10,0
   155 00000082 6D626572203D202564-
   155 0000008B 0A00               
   156                                  section .text
   157 000000B9 55                      push rbp
   158 000000BA 4889E5                  mov rbp, rsp
   159                                  
   160 000000BD 4831C0                      xor     rax, rax    ;
   161 000000C0 E8(00000000)                call    rand        ; запуск генератора случайных чисел
   162 000000C5 4831D2                      xor     rdx, rdx    ; обнуление перед делением
   163 000000C8 48F73C25[71000000]          idiv    qword[.i20]       ; (/%) -> остаток в rdx
   164 000000D0 4889D0                      mov     rax, rdx
   165 000000D3 4883C00A                    add     rax,10         ; должно сформироваться случайное число
   166                                  
   167                                      ;mov     rdi, .rndNumFmt
   168                                      ;mov     esi, eax
   169                                      ;xor     rax, rax
   170                                      ;call    printf
   171 000000D7 C9                      leave
   172 000000D8 C3                      ret
   173                                  
   174                                  ;----------------------------------------------
   175                                  ;// Случайный ввод параметров поезда
   176                                  ;void InRnd(train &t) {
   177                                  ;    t.numberOfRailwayCarriage = Random();
   178                                  ;    t.speed = RandomSpeed();
   179                                  ;    t.distance = RandomDistance();
   180                                  ;}
   181                                  global InRndTrain
   182                                  InRndTrain:
   183                                  section .data
   184 0000008D 496E524E4454524149-         .outf  db "InRNDTRAIN, %d",10,0
   184 00000096 4E2C2025640A00     
   185                                  section .bss
   186 00000008 <res 00000008>              .prect  resq 1   ; адрес поезда
   187                                  section .text
   188 000000D9 55                      push rbp
   189 000000DA 4889E5                  mov rbp, rsp
   190                                  
   191                                      ; В rdi адрес поезда
   192 000000DD 48893C25[08000000]          mov     [.prect], rdi
   193                                      ; Генерация параметров поезда
   194 000000E5 E816FFFFFF                  call    Random
   195 000000EA 488B1C25[08000000]          mov     rbx, [.prect]
   196 000000F2 8903                        mov     [rbx], eax
   197 000000F4 E8A1FFFFFF                  call    RandomSpeed
   198 000000F9 488B1C25[08000000]          mov     rbx, [.prect]
   199 00000101 894304                      mov     [rbx+4], eax
   200 00000104 E816FFFFFF                  call    RandomDistance
   201                                  
   202 00000109 488B1C25[08000000]          mov     rbx, [.prect]
   203 00000111 F20F114308                  movsd  [rbx+8], xmm0
   204                                      
   205                                  ;    mov rdi, .outf
   206                                  ;    movsd xmm0 ,[rbx+8]
   207                                  ;    mov rax,1
   208                                  ;    call printf
   209                                      
   210 00000116 C9                      leave
   211 00000117 C3                      ret
   212                                  
   213                                  ;----------------------------------------------
   214                                  ;// Ввод параметров самолета из потока
   215                                  ;void In(plane &p, ifstream &ifst) {
   216                                  ;    ifst >> p.flightRange >> p.liftingCapacity >> p.speed >> p.distance;
   217                                  ;
   218                                  ;}
   219                                  ;
   220                                  ;// Случайный ввод параметров самолета
   221                                  ;void InRnd(plane &p) {
   222                                  ;    p.liftingCapacity = RandomDisplacement();
   223                                  ;    p.flightRange = RandomDisplacement();
   224                                  ;    p.speed = RandomSpeed();
   225                                  ;    p.distance = RandomDistance();
   226                                  ;}
   227                                  global InRndPlane
   228                                  InRndPlane:
   229                                  section .bss
   230 00000010 <res 00000008>              .prect  resq 1   ; адрес ship
   231                                  section .text
   232 00000118 55                      push rbp
   233 00000119 4889E5                  mov rbp, rsp
   234                                      ; В rdi адрес поезда
   235 0000011C 48893C25[10000000]          mov     [.prect], rdi
   236                                      ; Генерация параметров корабля
   237 00000124 E890FFFFFF                  call    RandomDisplacement
   238 00000129 488B1C25[10000000]          mov     rbx, [.prect]
   239 00000131 8903                        mov     [rbx], eax
   240 00000133 E881FFFFFF                  call    RandomDisplacement
   241 00000138 488B1C25[10000000]          mov     rbx, [.prect]
   242 00000140 894304                      mov     [rbx+4], eax
   243 00000143 E852FFFFFF                  call    RandomSpeed
   244 00000148 488B1C25[10000000]          mov     rbx, [.prect]
   245 00000150 894308                      mov     [rbx+8], eax
   246 00000153 E8C7FEFFFF                  call    RandomDistance
   247 00000158 488B1C25[10000000]          mov     rbx, [.prect]
   248 00000160 F20F11430C                  movsd  [rbx+12], xmm0
   249                                      
   250                                  ;    mov rdi, .outf
   251                                  ;    movsd xmm0 ,[rbx+8]
   252                                  ;    mov rax,1
   253                                  ;    call printf
   254 00000165 C9                      leave
   255 00000166 C3                      ret
   256                                  
   257                                  ;// Ввод параметров корабля из потока
   258                                  ;void In(ship &s, ifstream &ifst) {
   259                                  ;    int type;
   260                                  ;    ifst >> s.displacement >> type >> s.speed >> s.distance;
   261                                  ;    s.type = (shipType)type;
   262                                  ;}
   263                                  ;
   264                                  ;// Случайный ввод параметров корабля
   265                                  ;void InRnd(ship &s) {
   266                                  ;    s.displacement =RandomDisplacement();
   267                                  ;    s.type = (shipType)RandomShipType();
   268                                  ;    s.speed = RandomSpeed();
   269                                  ;    s.distance = RandomDistance();
   270                                  ;}
   271                                  global InRndShip
   272                                  InRndShip:
   273                                  section .bss
   274 00000018 <res 00000008>              .prect  resq 1   ; адрес ship
   275                                  section .text
   276 00000167 55                      push rbp
   277 00000168 4889E5                  mov rbp, rsp
   278                                      ; В rdi адрес поезда
   279 0000016B 48893C25[18000000]          mov     [.prect], rdi
   280                                      ; Генерация параметров корабля
   281 00000173 E841FFFFFF                  call    RandomDisplacement
   282 00000178 488B1C25[18000000]          mov     rbx, [.prect]
   283 00000180 8903                        mov     [rbx], eax
   284 00000182 E8F4FEFFFF                  call    RandomShipType
   285 00000187 488B1C25[18000000]          mov     rbx, [.prect]
   286 0000018F 894304                      mov     [rbx+4], eax
   287 00000192 E803FFFFFF                  call    RandomSpeed
   288 00000197 488B1C25[18000000]          mov     rbx, [.prect]
   289 0000019F 894308                      mov     [rbx+8], eax
   290 000001A2 E878FEFFFF                  call    RandomDistance
   291 000001A7 488B1C25[18000000]          mov     rbx, [.prect]
   292 000001AF F20F11430C                  movsd  [rbx+12], xmm0
   293                                      
   294                                  ;    mov rdi, .outf
   295                                  ;    movsd xmm0 ,[rbx+8]
   296                                  ;    mov rax,1
   297                                  ;    call printf
   298 000001B4 C9                      leave
   299 000001B5 C3                      ret
   300                                  
   301                                  ;----------------------------------------------
   302                                  ;// Случайный ввод обобщенной фигуры
   303                                  ;int InRndShape(void *s) {
   304                                      ;int k = rand() % 2 + 1;
   305                                      ;switch(k) {
   306                                          ;case 1:
   307                                              ;*((int*)s) = RECTANGLE;
   308                                              ;InRndTrain(s+intSize);
   309                                              ;return 1;
   310                                          ;case 2:
   311                                              ;*((int*)s) = TRIANGLE;
   312                                              ;InRndShip(s+intSize);
   313                                              ;return 1;
   314                                          ;default:
   315                                              ;return 0;
   316                                      ;}
   317                                  ;}
   318                                  global InRndShape
   319                                  InRndShape:
   320                                  section .data
   321 0000009D 52616E646F6D206E75-         .rndNumFmt       db "Random number = %d",10,0
   321 000000A6 6D626572203D202564-
   321 000000AF 0A00               
   322                                  section .bss
   323 00000020 <res 00000008>              .pshape     resq    1   ; адрес фигуры
   324 00000028 <res 00000004>              .key        resd    1   ; ключ
   325                                  section .text
   326 000001B6 55                      push rbp
   327 000001B7 4889E5                  mov rbp, rsp
   328                                  
   329                                      ; В rdi адрес фигуры
   330 000001BA 48893C25[20000000]          mov [.pshape], rdi
   331                                  
   332                                      ; Формирование признака фигуры
   333 000001C2 4831C0                      xor     rax, rax    ;
   334 000001C5 E8B1FEFFFF                  call     RandomShipType       ; запуск генератора случайных чисел
   335                                      ;mov eax, 1;- генерируется только поезд
   336                                      ;mov     [.key], eax
   337                                      ;mov     rdi, .rndNumFmt
   338                                      ;mov     esi, [.key]
   339                                      ;xor     rax, rax
   340                                      ;call    printf
   341                                      ;mov     eax, [.key]
   342                                  
   343 000001CA 488B3C25[20000000]          mov     rdi, [.pshape]
   344 000001D2 8907                        mov     [rdi], eax      ; запись ключа в фигуру
   345 000001D4 3B0425[00000000]            cmp eax, [TRAIN]
   346 000001DB 7416                        je .trainInrnd
   347 000001DD 3B0425[00000000]            cmp eax, [SHIP]
   348 000001E4 741D                        je .shipInRnd
   349 000001E6 3B0425[00000000]            cmp eax, [PLANE]
   350 000001ED 7424                        je .planeInRnd
   351 000001EF 31C0                        xor eax, eax        ; код возврата = 0
   352 000001F1 EB30                        jmp     .return
   353                                  .trainInrnd:
   354                                      ; Генерация поезда
   355 000001F3 4883C704                    add     rdi, 4
   356 000001F7 E8DDFEFFFF                  call    InRndTrain
   357 000001FC B801000000                  mov     eax, 1      ;код возврата = 1
   358 00000201 EB20                        jmp     .return
   359                                  .shipInRnd:
   360                                      ; Генерация ship
   361 00000203 4883C704                    add     rdi, 4
   362 00000207 E85BFFFFFF                  call    InRndShip
   363 0000020C B801000000                  mov     eax, 1      ;код возврата = 1
   364 00000211 EB10                        jmp     .return
   365                                  .planeInRnd:
   366                                      ; Генерация ship
   367 00000213 4883C704                    add     rdi, 4
   368 00000217 E8FCFEFFFF                  call    InRndPlane
   369 0000021C B801000000                  mov     eax, 1      ;код возврата = 1
   370 00000221 EB00                        jmp     .return
   371                                  .return:
   372 00000223 C9                      leave
   373 00000224 C3                      ret
   374                                  
   375                                  ;----------------------------------------------
   376                                  ;// Случайный ввод содержимого контейнера
   377                                  ;void InRndContainer(void *c, int *len, int size) {
   378                                      ;void *tmp = c;
   379                                      ;while(*len < size) {
   380                                          ;if(InRndShape(tmp)) {
   381                                              ;tmp = tmp + shapeSize;
   382                                              ;(*len)++;
   383                                          ;}
   384                                      ;}
   385                                  ;}
   386                                  global InRndContainer
   387                                  InRndContainer:
   388                                  section .bss
   389 0000002C <res 00000008>              .pcont  resq    1   ; адрес контейнера
   390 00000034 <res 00000008>              .plen   resq    1   ; адрес для сохранения числа введенных элементов
   391 0000003C <res 00000004>              .psize  resd    1   ; число порождаемых элементов
   392                                  section .text
   393 00000225 55                      push rbp
   394 00000226 4889E5                  mov rbp, rsp
   395                                  
   396 00000229 48893C25[2C000000]          mov [.pcont], rdi   ; сохраняется указатель на контейнер
   397 00000231 48893425[34000000]          mov [.plen], rsi    ; сохраняется указатель на длину
   398 00000239 891425[3C000000]            mov [.psize], edx    ; сохраняется число порождаемых элементов
   399                                      ; В rdi адрес начала контейнера
   400 00000240 31DB                        xor ebx, ebx        ; число фигур = 0
   401                                  .loop:
   402 00000242 39D3                        cmp ebx, edx
   403 00000244 7D1A                        jge     .return
   404                                      ; сохранение рабочих регистров
   405 00000246 57                          push rdi
   406 00000247 53                          push rbx
   407 00000248 52                          push rdx
   408                                  
   409 00000249 E868FFFFFF                  call    InRndShape     ; ввод фигуры
   410 0000024E 4883F800                    cmp rax, 0          ; проверка успешности ввода
   411 00000252 7E0C                        jle  .return        ; выход, если признак меньше или равен 0
   412                                  
   413 00000254 5A                          pop rdx
   414 00000255 5B                          pop rbx
   415 00000256 48FFC3                      inc rbx
   416                                  
   417 00000259 5F                          pop rdi
   418 0000025A 4883C718                    add rdi, 24             ; адрес следующей фигуры
   419                                  
   420 0000025E EBE2                        jmp .loop
   421                                  .return:
   422 00000260 488B0425[34000000]          mov rax, [.plen]    ; перенос указателя на длину
   423 00000268 8918                        mov [rax], ebx      ; занесение длины
   424 0000026A C9                      leave
   425 0000026B C3                      ret
